# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# There's a lot of duplication here, but no great alternatives:
# https://stackoverflow.com/q/58457140

name: Upload Python Package

on:
  push:
    tags:
    - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel twine


    # LINT

    - uses: psf/black@22.1.0
      with:
        src: "."
    - uses: isort/isort-action@master
      with:
        sortPaths: "."
        isortVersion: "5.10.1"
    - name: Run flake8
      run: |
        pip install flake8 flake8-simplify flake8-comprehensions flake8-bugbear darglint flake8-pep585
        python -m flake8 .

    # TYPE/TEST ENV

    # Configure conda
    - name: Set up micromamba
      uses: mamba-org/provision-with-micromamba@5fe88d370c741fc3567126d17c5af0b9620bd60d
      with:
        cache-downloads: true
        cache-downloads-key: "mamba-${{ hashFiles('environment.lock') }}"
        # to generate environment.lock run, see docker/update-reqs.sh
        environment-file: environment.lock
        environment-name: bindgen

    - name: Cache pip downloads
      uses: actions/cache@v3
      with:
        path: "~/.cache/pip"
        key: "pip-${{ hashFiles('setup.cfg') }}"
        restore-keys: |
          pip-${{ hashFiles('setup.cfg') }}
          pip-

    - name: Log in to AWS CodeArtifact
      run: |
        aws codeartifact login --tool pip --repository charm-pypi --domain charm-pypi \
        --domain-owner 455661021047 --region eu-west-1

    - name: Install package
      run: |
        python -m pip install .[tests]

    # TYPE CHECK

    - name: Mypy
      run: |
        python -m mypy --install-types --non-interactive
        python -m mypy

    # TEST

    - name: Test with pytest
      run: |
        python -m pytest --cov-report=xml

    - name: Code Coverage
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage.xml
        badge: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '80 100'

    # RELEASE

    - name: Log into AWS CodeArtifact
      run: | 
        aws codeartifact login --tool twine --repository charm-pypi --domain charm-pypi \
        --domain-owner 455661021047 --region eu-west-1

    - name: Build and publish
      run: |
        python setup.py sdist bdist_wheel
        twine upload --repository-url $REPO_URL dist/*
