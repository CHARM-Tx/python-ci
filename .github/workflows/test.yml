name: Unit Testing

on:
  workflow_call:
    inputs:
      environment_file:
        description: filename of conda env file
        required: false
        type: string
        default: environment.yml
      python_versions:
        description: string containing a JSON array of versions
        required: false
        type: string
        default: '["3.9"]'
      apt_packages:
        description: string containing apt package names
        required: false
        type: string
        default: ''        
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      MLUTILS_DEPLOY_KEY:
        required: true
      AWS_ACCOUNT_ID:
        required: true

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 10

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJson(inputs.python_versions) }}

    steps:
    - uses: actions/checkout@v2

    - name: Install apt packages
      run: sudo apt-get install --yes ${{ inputs.apt_packages }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Log in to AWS CodeArtifact
      run: |
        aws codeartifact login --tool pip --repository charm-pypi --domain charm-pypi \
        --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} --region eu-west-1

    # Configure conda
    - name: Set up micromamba
      uses: mamba-org/provision-with-micromamba@5fe88d370c741fc3567126d17c5af0b9620bd60d
      with:
        cache-downloads: true
        cache-downloads-key: "mamba-${{ hashFiles(inputs.environment_file) }}"
        environment-file: ${{ inputs.environment_file }}
        environment-name: unit-testing
        extra-specs:
          python=${{ matrix.python-version }}

    - name: Cache pip downloads
      uses: actions/cache@v3
      with:
        path: "~/.cache/pip"
        key: "pip-${{ hashFiles('setup.cfg') }}"
        restore-keys: |
          pip-${{ hashFiles('setup.cfg') }}
          pip-

    - name: Install package
      run: |
        python -m pip install .[tests]

    - name: Test with pytest
      run: |
        python -m pytest --cov-report=xml

    - name: Code Coverage
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage.xml
        badge: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '80 100'
