name: Unit Testing

on:
  workflow_call:
    inputs:
      python_version:
        type: string
        default: 3.9
  pull_request: {}

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 10

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    # Configure conda
    - name: Set up micromamba
      uses: mamba-org/provision-with-micromamba@5fe88d370c741fc3567126d17c5af0b9620bd60d
      with:
        cache-downloads: true
        cache-downloads-key: "mamba-${{ hashFiles('environment.lock') }}"
        # to generate environment.lock run, see docker/update-reqs.sh
        environment-file: environment.lock
        environment-name: unit-testing
        extra-specs:
          python=${{ inputs.python_version }}

    - name: Cache pip downloads
      uses: actions/cache@v3
      with:
        path: "~/.cache/pip"
        key: "pip-${{ hashFiles('requirements-test.txt') }}"
        restore-keys: |
          pip-${{ hashFiles('requirements-test.txt') }}
          pip-

    - name: Install package
      run: |
        python -m pip install .

    - name: Test with pytest
      run: |
        python -m pytest --cov-report=xml

    - name: Code Coverage
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage.xml
        badge: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '80 100'
